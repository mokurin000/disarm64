name: Test Build

on:
  workflow_dispatch:

jobs:
  release:
    name: Test on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-x86_64, macos-arm64, linux-x86_64, linux-arm64, linux-riscv64, windows-x86_64, windows-arm64]
        include:
          - platform: macos-x86_64
            target: x86_64-apple-darwin
            os: macos-latest
            
          - platform: macos-arm64
            target: aarch64-apple-darwin
            os: macos-latest

          - platform: linux-x86_64
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            
          - platform: linux-arm64
            target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

          - platform: linux-riscv64
            target: riscv64gc-unknown-linux-gnu
            os: ubuntu-latest

          - platform: windows-x86_64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            
          - platform: windows-arm64
            target: aarch64-pc-windows-msvc
            os: windows-latest
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Profiling flags
        shell: bash
        run: |
          mkdir -p .cargo
          echo "[build]" > .cargo/config.toml
          echo 'rustflags = "-Z self-profile"' >> .cargo/config.toml

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          args: "--locked --release --package disarm64 --no-default-features"

      - name: Prepare assets
        shell: bash
        run: |
          tar -cvzf ${{ matrix.target }}.tar.gz *.mm_profdata

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz
